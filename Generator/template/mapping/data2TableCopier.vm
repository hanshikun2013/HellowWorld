package $copierPackage;

import jp.co.axa.life.app.lt.util.ConverterUtility;
import jp.co.axa.life.app.lt.common.LtSvConst;
import jp.co.axa.life.app.lt.common.util.LtSvUtils;
#foreach($dataModelName in ${mappingModel.dataModelList})
import $dataModelPackage.$dataModelName;
#end
#foreach($tableModelName in ${mappingModel.tableModelList})
import $tableModelPackage.$StringUtil.toCamelCase($tableModelName);
#end


public class $datamodel2TableCopierName{

#foreach($funcModel in ${mappingModel.funcs})
#foreach($funcGroupModel in ${funcModel.items})
#set ( $orgmethod = "${funcModel.name}_${funcGroupModel.name}" )
#set ( $methodname = $StringUtil.getMappingName($orgmethod) )
#set ( $param = $StringUtil.joinParams($funcGroupModel.dataModelList) )

	/*
	 * データ変換処理：
	 * ${funcModel.name}:${funcGroupModel.name}
	 */
	static public $StringUtil.toCamelCase($funcGroupModel.name) ${methodname}($param){
		//パラメターのNULLチェック：	
#foreach($dataModelName in ${funcGroupModel.dataModelList})
		if( $StringUtil.toLowerCaseInitial($dataModelName) == null)
			$StringUtil.toLowerCaseInitial($dataModelName) =new $StringUtil.toUpperCaseInitial($dataModelName) ();
#end	

		$StringUtil.toCamelCase($funcGroupModel.name) result=new $StringUtil.toCamelCase($funcGroupModel.name)();
#foreach($item in ${funcGroupModel.items})
		//FROM:画面データモデル:$item.get("画面データモデル.モデルID/概要") 入力:$item.get("画面データモデル.入力") key名:$item.get("画面データモデル.key名") 型:$item.get("画面データモデル.型") 備考: $StringUtil.cleanUpString($item.get("画面データモデル.備考"))
		//TO:テーブル.テーブル:$item.get("テーブル.テーブル(物理/論理)") 論理:$item.get("テーブル.項目名(論理)") 物理:$item.get("テーブル.項目名(物理)") 属性:$item.get("テーブル.属性") 桁数:$item.get("テーブル.桁数") 少数:$item.get("テーブル.少数") 備考:$StringUtil.cleanUpString($item.get("テーブル.備考"))
#set ($physicalName =	$item.get("テーブル.項目名(物理)") )
#set ( $method = $StringUtil.toUpperCaseInitial( $StringUtil.toCamelCase($physicalName)) )
#set ($setTableMethod = "set$method")
#set ( $attr = $item.get("テーブル.属性") )
#set ( $convertClass = $StringUtil.getTypeName($attr) )
#set ( $keyName=$StringUtil.toUpperCaseInitial($item.get("画面データモデル.key名")	)		)
#set ($getDataMethod = "get$keyName")
#set ($srcObjName = $StringUtil.toLowerCaseInitial($item.get("画面データモデル.モデルID/概要")))			
#set ($srcObjName = "${srcObjName}Collection")			
#if($keyName==""	)
		//TODO:
		//result.$setTableMethod(ConverterUtility.convert(${convertClass}.class,$srcObjName.${getDataMethod}()));
#else
		//TODO:
#if($item.get("テーブル.備考").matches(".*×10000.*"))
		result.$setTableMethod(LtSvUtils.multiply(ConverterUtility.convert(${convertClass}.class,$srcObjName.${getDataMethod}()),LtSvConst.TEN_THOUSAND));
#elseif($item.get("テーブル.備考").matches(".*÷10000.*"))
		result.$setTableMethod(LtSvUtils.divide(ConverterUtility.convert(${convertClass}.class,$srcObjName.${getDataMethod}()),LtSvConst.TEN_THOUSAND));
#else
		result.$setTableMethod(ConverterUtility.convert(${convertClass}.class,$srcObjName.${getDataMethod}()));
#end
#end
#end

		return result;

	}
#end
#end

}
